// <auto-generated />
using System;
using EatWellAssistant.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EatWellAssistant.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20240509161651_Init Migration")]
    partial class InitMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EatWellAssistant.Models.Entities.Cart", b =>
                {
                    b.Property<int>("cartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cartId"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("totalAlcohol")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("totalCalories")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("totalCarb")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("totalFat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("totalGram")
                        .HasColumnType("int");

                    b.Property<decimal?>("totalProtein")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("usersuserId")
                        .HasColumnType("int");

                    b.HasKey("cartId");

                    b.HasIndex("usersuserId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("EatWellAssistant.Models.Entities.CartItems", b =>
                {
                    b.Property<int>("cartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cartItemId"));

                    b.Property<int?>("cartId")
                        .HasColumnType("int");

                    b.Property<int?>("foodId")
                        .HasColumnType("int");

                    b.Property<int?>("gram")
                        .HasColumnType("int");

                    b.Property<decimal?>("totalAlcohol")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("totalCalories")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("totalCarb")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("totalFat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("totalProtein")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("cartItemId");

                    b.HasIndex("cartId");

                    b.HasIndex("foodId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("EatWellAssistant.Models.Entities.Category", b =>
                {
                    b.Property<int>("categoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("categoryId"));

                    b.Property<string>("categoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("categoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("EatWellAssistant.Models.Entities.Food", b =>
                {
                    b.Property<int?>("foodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("foodId"));

                    b.Property<decimal?>("alcohol")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("caloriesPerGram")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("carbs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("fat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("foodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("protein")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("status")
                        .HasColumnType("bit");

                    b.HasKey("foodId");

                    b.HasIndex("categoryId");

                    b.ToTable("Food");
                });

            modelBuilder.Entity("EatWellAssistant.Models.Entities.Meal", b =>
                {
                    b.Property<int>("mealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("mealId"));

                    b.Property<string>("mealName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("planMealId")
                        .HasColumnType("int");

                    b.Property<decimal?>("totalAlcohol")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("totalCalories")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("totalCarb")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("totalFat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("totalProtein")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("mealId");

                    b.HasIndex("planMealId");

                    b.ToTable("Meal");
                });

            modelBuilder.Entity("EatWellAssistant.Models.Entities.MealDetail", b =>
                {
                    b.Property<int>("mealDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("mealDetailId"));

                    b.Property<decimal?>("caloriesPerGram")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("foodId")
                        .HasColumnType("int");

                    b.Property<int>("gram")
                        .HasColumnType("int");

                    b.Property<int?>("mealId")
                        .HasColumnType("int");

                    b.Property<decimal?>("totalAlcohol")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("totalCalories")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("totalCarb")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("totalFat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("totalProtein")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("mealDetailId");

                    b.HasIndex("foodId");

                    b.HasIndex("mealId");

                    b.ToTable("MealDetail");
                });

            modelBuilder.Entity("EatWellAssistant.Models.Entities.PlanMeal", b =>
                {
                    b.Property<int>("planMealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("planMealId"));

                    b.Property<DateTime?>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("usersuserId")
                        .HasColumnType("int");

                    b.HasKey("planMealId");

                    b.HasIndex("usersuserId");

                    b.ToTable("PlanMeal");
                });

            modelBuilder.Entity("EatWellAssistant.Models.Entities.Profile", b =>
                {
                    b.Property<int>("profileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("profileId"));

                    b.Property<int?>("age")
                        .HasColumnType("int");

                    b.Property<DateTime?>("birthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("profileId");

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("EatWellAssistant.Models.Entities.Users", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("fullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("profileId")
                        .HasColumnType("int");

                    b.Property<string>("role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("userId");

                    b.HasIndex("profileId")
                        .IsUnique()
                        .HasFilter("[profileId] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EatWellAssistant.Models.Entities.Cart", b =>
                {
                    b.HasOne("EatWellAssistant.Models.Entities.Users", "users")
                        .WithMany("carts")
                        .HasForeignKey("usersuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("EatWellAssistant.Models.Entities.CartItems", b =>
                {
                    b.HasOne("EatWellAssistant.Models.Entities.Cart", "cart")
                        .WithMany("cartItems")
                        .HasForeignKey("cartId");

                    b.HasOne("EatWellAssistant.Models.Entities.Food", "food")
                        .WithMany("cartItems")
                        .HasForeignKey("foodId");

                    b.Navigation("cart");

                    b.Navigation("food");
                });

            modelBuilder.Entity("EatWellAssistant.Models.Entities.Food", b =>
                {
                    b.HasOne("EatWellAssistant.Models.Entities.Category", "category")
                        .WithMany("foods")
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("EatWellAssistant.Models.Entities.Meal", b =>
                {
                    b.HasOne("EatWellAssistant.Models.Entities.PlanMeal", "planMeal")
                        .WithMany("meals")
                        .HasForeignKey("planMealId");

                    b.Navigation("planMeal");
                });

            modelBuilder.Entity("EatWellAssistant.Models.Entities.MealDetail", b =>
                {
                    b.HasOne("EatWellAssistant.Models.Entities.Food", "food")
                        .WithMany("mealDetails")
                        .HasForeignKey("foodId");

                    b.HasOne("EatWellAssistant.Models.Entities.Meal", "meal")
                        .WithMany("mealDetails")
                        .HasForeignKey("mealId");

                    b.Navigation("food");

                    b.Navigation("meal");
                });

            modelBuilder.Entity("EatWellAssistant.Models.Entities.PlanMeal", b =>
                {
                    b.HasOne("EatWellAssistant.Models.Entities.Users", "users")
                        .WithMany("planMeals")
                        .HasForeignKey("usersuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("EatWellAssistant.Models.Entities.Users", b =>
                {
                    b.HasOne("EatWellAssistant.Models.Entities.Profile", "profile")
                        .WithOne("account")
                        .HasForeignKey("EatWellAssistant.Models.Entities.Users", "profileId");

                    b.Navigation("profile");
                });

            modelBuilder.Entity("EatWellAssistant.Models.Entities.Cart", b =>
                {
                    b.Navigation("cartItems");
                });

            modelBuilder.Entity("EatWellAssistant.Models.Entities.Category", b =>
                {
                    b.Navigation("foods");
                });

            modelBuilder.Entity("EatWellAssistant.Models.Entities.Food", b =>
                {
                    b.Navigation("cartItems");

                    b.Navigation("mealDetails");
                });

            modelBuilder.Entity("EatWellAssistant.Models.Entities.Meal", b =>
                {
                    b.Navigation("mealDetails");
                });

            modelBuilder.Entity("EatWellAssistant.Models.Entities.PlanMeal", b =>
                {
                    b.Navigation("meals");
                });

            modelBuilder.Entity("EatWellAssistant.Models.Entities.Profile", b =>
                {
                    b.Navigation("account")
                        .IsRequired();
                });

            modelBuilder.Entity("EatWellAssistant.Models.Entities.Users", b =>
                {
                    b.Navigation("carts");

                    b.Navigation("planMeals");
                });
#pragma warning restore 612, 618
        }
    }
}
